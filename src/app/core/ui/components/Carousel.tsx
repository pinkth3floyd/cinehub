'use client';

import React from 'react';

export interface CarouselProps {
  children: React.ReactNode;
  variant?: 'home' | 'content' | 'premiere';
  className?: string;
  showArrows?: boolean;
  showDots?: boolean;
}

export default function Carousel({
  children,
  variant = 'content',
  className = '',
  showArrows = true,
  showDots = false
}: CarouselProps) {
  const carouselClass = `carousel splide splide--${variant} ${className}`.trim();

  return (
    <div className={carouselClass}>
      {showArrows && (
        <div className="splide__arrows">
          <button className="splide__arrow splide__arrow--prev" type="button">
            <i className="ti ti-chevron-left"></i>
          </button>
          <button className="splide__arrow splide__arrow--next" type="button">
            <i className="ti ti-chevron-right"></i>
          </button>
        </div>
      )}

      <div className="splide__track">
        <ul className="splide__list">
          {React.Children.map(children, (child, index) => (
            <li key={index} className="splide__slide">
              {child}
            </li>
          ))}
        </ul>
      </div>

      {showDots && (
        <div className="splide__pagination">
          {/* Dots will be generated by Splide */}
        </div>
      )}
    </div>
  );
} 